<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scientific Post | Academic</title>
    <link>https//emirenru.github.io/ru/category/scientific-post/</link>
      <atom:link href="https//emirenru.github.io/ru/category/scientific-post/index.xml" rel="self" type="application/rss+xml" />
    <description>Scientific Post</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ru</language><lastBuildDate>Sun, 22 May 2022 13:11:32 +0300</lastBuildDate>
    <image>
      <url>/https/emirenru.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Scientific Post</title>
      <link>https//emirenru.github.io/ru/category/scientific-post/</link>
    </image>
    
    <item>
      <title>Научные Языки Программирования</title>
      <link>https//emirenru.github.io/ru/post/scientific-programming-language/</link>
      <pubDate>Sun, 22 May 2022 13:11:32 +0300</pubDate>
      <guid>https//emirenru.github.io/ru/post/scientific-programming-language/</guid>
      <description>&lt;p&gt;В компьютерном программировании научный язык программирования может относиться к двум степеням одного и того же понятия.&lt;/p&gt;
&lt;p&gt;В широком смысле научный язык программирования - это язык программирования, который широко используется для вычислительной науки и вычислительной математики. В этом смысле C/C++ и Python[1] можно считать научными языками программирования.&lt;/p&gt;
&lt;p&gt;В более широком смысле научный язык программирования - это тот, который разработан и оптимизирован для использования математических формул и матриц.[2] Такие языки характеризуются не только наличием библиотек, выполняющих математические или научные функции, но и синтаксисом самого языка.[3] Например, ни C++, ни Python не имеют встроенных типов матриц или функций для матричных арифметических операций (сложение, умножение и т.д.); вместо этого эта функциональность доступна через стандартные библиотеки. Научные языки программирования в более широком смысле включают ALGOL, APL, Fortran, J, Julia, Maple, MATLAB и R.[4][5]&lt;/p&gt;
&lt;p&gt;Научные языки программирования не следует путать с научным языком в целом, который в общих чертах относится к более высоким стандартам точности, корректности и краткости, ожидаемым от практиков научного метода.&lt;/p&gt;
&lt;h2 id=&#34;примеры&#34;&gt;Примеры&lt;/h2&gt;
&lt;h3 id=&#34;линейная-алгебра&#34;&gt;Линейная алгебра&lt;/h3&gt;
&lt;p&gt;Научные языки программирования предоставляют средства для работы с линейной алгеброй. Например, следующая программа Julia решает систему линейных уравнений:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x20&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;      &lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;element&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;           &lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;solution&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Работа с большими векторами и матрицами является ключевой особенностью этих языков, поскольку линейная алгебра закладывает основу для математической оптимизации, которая, в свою очередь, позволяет использовать основные приложения, такие как глубокое обучение.&lt;/p&gt;
&lt;h3 id=&#34;математическая-оптимизация&#34;&gt;Математическая оптимизация&lt;/h3&gt;
&lt;p&gt;На научном языке программирования мы можем вычислять оптимумы функций с синтаксисом, близким к математическому языку. Например, следующий код Julia находит минимум многочлена P(x,y) = x^2 - 3xy + 5y^2 - 7y + 3&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;using Optim

P(x,y) = x^2 - 3x*y + 5y^2 - 7y + 3

z₀ = [ 0.0
       0.0 ]     #  отправная точка для алгоритма оптимизации

optimize(z -&amp;gt; P(z...), z₀, Newton();
         autodiff = :forward)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;В этом примере используется метод минимизации Ньютона. Современные научные языки программирования будут использовать автоматическое дифференцирование для вычисления градиентов и гессианов функции, заданной в качестве входных данных; ср. дифференцируемое программирование. Здесь для этой задачи было выбрано автоматическое прямое дифференцирование. Старые научные языки программирования, такие как почтенный Fortran, потребовали бы, чтобы программист передал рядом с оптимизируемой функцией функцию, которая вычисляет градиент, и функцию, которая вычисляет гессиан.&lt;/p&gt;
&lt;p&gt;При большем знании функции, подлежащей минимизации, можно использовать более эффективные алгоритмы. Например, выпуклая оптимизация обеспечивает более быстрые вычисления, когда функция выпуклая, квадратичное программирование обеспечивает более быстрые вычисления, когда функция не более квадратична по своим переменным, и линейное программирование, когда функция не более линейна.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
