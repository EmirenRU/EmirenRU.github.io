[{"authors":null,"categories":null,"content":"Привет, мир. Я студент Математики и Компьютерных наук в Российском Университете Дружбы Народов. Я увлекаюсь музыкой, книгами и технологиями.\n  Скачать моё резюме.\n","date":1372636800,"expirydate":-62135596800,"kind":"term","lang":"ru","lastmod":1372636800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Привет, мир. Я студент Математики и Компьютерных наук в Российском Университете Дружбы Народов. Я увлекаюсь музыкой, книгами и технологиями.\n  Скачать моё резюме.","tags":null,"title":"Эмиль Самигуллин","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/ru/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":[],"categories":[],"content":"Приветик. Я начинаю писать пост о моей последней неделе. Теперь на Русском. Усталость или нет? На этой неделе я расслабился из-за того, что рано сделал домашнее задание. Поэтому я провожу время за просмотром обучающих видеороликов и, конечно же, слушаю музыку и игры.\nТехнология программирования Мы создали класс Vector и Matrix с перегруженными операторами и некоторыми функциями и конструкторами. Итак, на этой неделе я собираюсь заняться Системой линейных уравнений. Трудно написать дискриминантную функцию, но я обнаружил, что нам нужно выполнить рекурсию.\nСпасибо за внимание. P.S. Мне лень было переписывать, так что просто закинул в переводчик. Изначально писал на Англ.\n","date":1653748093,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1653748093,"objectID":"13704f5295f14d78fe2311918b94c933","permalink":"https://example.com/ru/post/recent-week-2/","publishdate":"2022-05-28T17:28:13+03:00","relpermalink":"/ru/post/recent-week-2/","section":"post","summary":"Приветик. Я начинаю писать пост о моей последней неделе. Теперь на Русском. Усталость или нет? На этой неделе я расслабился из-за того, что рано сделал домашнее задание. Поэтому я провожу время за просмотром обучающих видеороликов и, конечно же, слушаю музыку и игры.","tags":[],"title":"Неделя 23-29 мая","type":"post"},{"authors":[],"categories":["Scientific Post"],"content":"В компьютерном программировании научный язык программирования может относиться к двум степеням одного и того же понятия.\nВ широком смысле научный язык программирования - это язык программирования, который широко используется для вычислительной науки и вычислительной математики. В этом смысле C/C++ и Python[1] можно считать научными языками программирования.\nВ более широком смысле научный язык программирования - это тот, который разработан и оптимизирован для использования математических формул и матриц.[2] Такие языки характеризуются не только наличием библиотек, выполняющих математические или научные функции, но и синтаксисом самого языка.[3] Например, ни C++, ни Python не имеют встроенных типов матриц или функций для матричных арифметических операций (сложение, умножение и т.д.); вместо этого эта функциональность доступна через стандартные библиотеки. Научные языки программирования в более широком смысле включают ALGOL, APL, Fortran, J, Julia, Maple, MATLAB и R.[4][5]\nНаучные языки программирования не следует путать с научным языком в целом, который в общих чертах относится к более высоким стандартам точности, корректности и краткости, ожидаемым от практиков научного метода.\nПримеры Линейная алгебра Научные языки программирования предоставляют средства для работы с линейной алгеброй. Например, следующая программа Julia решает систему линейных уравнений:\nA = rand(20, 20) # A is a 20x20 matrix b = rand(20) # b is a 20-element vector x = A\\b # x is the solution to A*x = Работа с большими векторами и матрицами является ключевой особенностью этих языков, поскольку линейная алгебра закладывает основу для математической оптимизации, которая, в свою очередь, позволяет использовать основные приложения, такие как глубокое обучение.\nМатематическая оптимизация На научном языке программирования мы можем вычислять оптимумы функций с синтаксисом, близким к математическому языку. Например, следующий код Julia находит минимум многочлена P(x,y) = x^2 - 3xy + 5y^2 - 7y + 3\nusing Optim P(x,y) = x^2 - 3x*y + 5y^2 - 7y + 3 z₀ = [ 0.0 0.0 ] # отправная точка для алгоритма оптимизации optimize(z -\u0026gt; P(z...), z₀, Newton(); autodiff = :forward) В этом примере используется метод минимизации Ньютона. Современные научные языки программирования будут использовать автоматическое дифференцирование для вычисления градиентов и гессианов функции, заданной в качестве входных данных; ср. дифференцируемое программирование. Здесь для этой задачи было выбрано автоматическое прямое дифференцирование. Старые научные языки программирования, такие как почтенный Fortran, потребовали бы, чтобы программист передал рядом с оптимизируемой функцией функцию, которая вычисляет градиент, и функцию, которая вычисляет гессиан.\nПри большем знании функции, подлежащей минимизации, можно использовать более эффективные алгоритмы. Например, выпуклая оптимизация обеспечивает более быстрые вычисления, когда функция выпуклая, квадратичное программирование обеспечивает более быстрые вычисления, когда функция не более квадратична по своим переменным, и линейное программирование, когда функция не более линейна.\n","date":1653214292,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1653214292,"objectID":"89f0f7018941b153a911391709393a5c","permalink":"https://example.com/ru/post/scientific-programming-language/","publishdate":"2022-05-22T13:11:32+03:00","relpermalink":"/ru/post/scientific-programming-language/","section":"post","summary":"Некоторое представление о научных языках","tags":["Scientific Posts"],"title":"Научные Языки Программирования","type":"post"},{"authors":["Emil Samigullin"],"categories":["Project","Courses"],"content":"Linux Project    Some text for future references.\n","date":1653213993,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1653213993,"objectID":"a3dae3b12b18b222235f942ab56cf466","permalink":"https://example.com/ru/project/operating-systems/","publishdate":"2022-05-22T13:06:33+03:00","relpermalink":"/ru/project/operating-systems/","section":"project","summary":"Some text for future references","tags":["Project"],"title":"Operating Systems","type":"project"},{"authors":["Emil Samigullin"],"categories":["Scientific Posts"],"content":"Отчет - это документальный отчет, в котором представлены и/или обобщены факты о конкретном событии, теме или проблеме. Идея заключается в том, что люди, незнакомые с предметом, могут найти все, что им нужно знать, из хорошего отчета.\nОтчеты позволяют легко ввести кого-то в курс дела, но на самом деле написать отчет совсем не просто. Итак, чтобы помочь вам понять, что делать, ниже мы представляем наш собственный небольшой отчет, посвященный написанию отчетов.\nЧто такое отчет? С технической точки зрения определение отчета довольно расплывчато: любой отчет, устный или письменный, о вопросах, касающихся определенной темы. Это может относиться к чему угодно, от показаний в зале суда до отчета о книге младшего школьника.\nНа самом деле, когда люди говорят о “отчетах”, они обычно имеют в виду официальные документы, излагающие факты по какой-либо теме, обычно написанные экспертом по этому вопросу или кем-то, кому поручено провести расследование. Существуют различные типы отчетов, описанные в следующем разделе, но в основном они соответствуют этому описанию.\nКакая информация содержится в отчетах? Хотя все факты приветствуются, отчеты, в частности, как правило, содержат такие типы контента:\n  Подробная информация о событии или ситуации\n  Последствия или продолжающееся воздействие события или ситуации\n  Оценка статистических данных или аналитики\n  Интерпретации информации, содержащейся в отчете\n  Прогнозы или рекомендации, основанные на информации, содержащейся в отчете\n  Как информация соотносится с другими событиями или отчетами\n  Отчеты тесно связаны с написанием эссе, хотя есть некоторые четкие различия. В то время как оба опираются на факты, эссе добавляют личные мнения и аргументы авторов. Отчеты, как правило, придерживаются только фактов, хотя они могут включать в себя некоторую авторскую интерпретацию этих фактов, скорее всего, в заключении.\nКроме того, отчеты тщательно организованы, обычно с оглавлениями и обильными заголовками и подзаголовками. Это облегчает читателям сканирование отчетов в поисках нужной им информации. Эссе, с другой стороны, предназначены для того, чтобы их читали от начала до конца, а не просматривали в поисках конкретных идей.\nТипы отчетов Существует несколько различных типов отчетов, в зависимости от цели и того, кому вы представляете свой отчет. Вот краткий список распространенных типов отчетов:\n  Академический отчет: проверяет понимание учащимся предмета, такого как отчеты о книгах, отчеты об исторических событиях и биографии.\n  Бизнес-отчеты: определяет информацию, полезную для бизнес-стратегии, такую как маркетинговые отчеты, внутренние служебные записки, SWOT-анализ и технико-экономические обоснования.\n  Научные отчеты: публикует результаты исследований, такие как исследовательские статьи и тематические исследования, как правило, в научных журналах.\n  Отчеты могут быть дополнительно разделены на категории в зависимости от того, как они написаны. Например, отчет может быть официальным или неофициальным, коротким или длинным, внутренним или внешним. В бизнесе вертикальный отчет делится информацией с людьми на разных уровнях иерархии (т.Е. с людьми, которые работают выше вас и ниже вас), в то время как боковой отчет предназначен для людей того же уровня, что и автор, но в разных отделах.\nСуществует столько же типов отчетов, сколько и стилей написания, но в этом руководстве мы сосредоточимся на академических отчетах, которые, как правило, носят формальный и информационный характер.\nКакова структура отчета? Структура отчета зависит от типа отчета и требований задания. Хотя отчеты могут использовать свою собственную уникальную структуру, большинство из них следуют этому базовому шаблону:\n  Резюме: Точно так же, как реферат в научной статье, резюме представляет собой отдельный раздел, в котором кратко излагаются выводы вашего отчета, чтобы читатели знали, чего ожидать. Они в основном предназначены для официальных отчетов и в меньшей степени для школьных отчетов.\n  Введение: Создавая основную часть отчета, ваше введение объясняет общую тему, которую вы собираетесь обсудить, с изложением вашего тезиса и любой необходимой справочной информацией, прежде чем вы перейдете к своим собственным выводам.\n  Основная часть: Основная часть отчета объясняет все ваши основные открытия, разбитые на заголовки и подзаголовки. Основная часть составляет большую часть всего отчета; в то время как введение и заключение состоят всего из нескольких абзацев каждый, основная часть может растянуться на страницы.\n  Заключение: Заключение - это когда вы сводите воедино всю информацию в своем отчете и приходите к окончательному толкованию или суждению. Обычно в этом случае автор вводит свои собственные личные мнения или выводы.\n  Если вы знакомы с тем, как писать исследовательскую работу, вы заметите, что написание отчета следует той же структуре “введение-основная часть-заключение”, иногда добавляя краткое изложение. Отчеты обычно также имеют свои собственные дополнительные требования, такие как титульные страницы и …","date":1652692579,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1652692579,"objectID":"876cc094ed76248fda29e56e129bea13","permalink":"https://example.com/ru/post/report-or-presentation/","publishdate":"2022-05-16T12:16:19+03:00","relpermalink":"/ru/post/report-or-presentation/","section":"post","summary":"Отчет - это документальный отчет, в котором представлены и/или обобщены факты о конкретном событии, теме или проблеме. Идея заключается в том, что люди, незнакомые с предметом, могут найти все, что им нужно знать, из хорошего отчета.","tags":["Scientific Posts"],"title":"Как Писать Отчёты: Руководство","type":"post"},{"authors":["Emil Samigullin"],"categories":["Git"],"content":"Git — это система для управления версиями исходного кода программ. В статье мы познакомимся с её основными возможностями, покажем отличие от GitHub и объясним, зачем Git новичку. Ещё вы узнаете, с чего начать обучение и почему не стоит тратить время на альтернативные программы.\nGit — это система коммитов Представьте ситуацию: геймер доходит до финала, проигрывает и возвращается к началу уровня — попадает в ближайшую контрольную точку игры, где разработчики разрешили сохраниться. Если мы уберём контрольные точки, после каждого проигрыша придётся начинать игру заново.\n В программировании за сохранение кода в контрольных точках отвечает система контроля версий — специальная технология, которую можно подключить к любому проекту. Система контроля версий страхует от ошибок и возвращает код в то состояние, когда всё работало.\n Контрольные точки называются коммитами. Один коммит — это пакет изменений, хранящий информацию с добавленными, отредактированными или удалёнными файлами кода. В один коммит принято добавлять не более десяти изменений — так получается длинная история версий, которая позволяет в случае ошибки откатиться с минимальной потерей работоспособного кода.\n   Git — это комплекс связанных веток Коммиты располагаются на master-ветке — основной версии проекта, которая после завершения работы превратится в продукт.\n Система контроля версий позволяет создавать ответвления от master-ветки и экспериментировать с проектом, не мешая другим участника команды.\n Возьмём предыдущую схему, где мы обнаружили ошибку и откатились на один коммит назад. Чтобы поправить код, создадим несколько дополнительных веток и в каждой протестируем разные варианты решения проблемы. Когда решение найдено, ветку с правильным кодом переносим в master-ветку и сохраняем коммит. Лишние ветки оставляем или удаляем, поскольку они не влияют на проект и скрыты от других разработчиков — это ваш личный черновик.\n   Git — это инструмент совместного создания кода Часто бывает так: разработчики отделяются от master-ветки и работают над частью проекта самостоятельно — например, чтобы протестировать дополнительные функции. Но не могут продолжить, пока кто-то из команды не допишет код.\n Система контроля версий позволяет не ждать обновления master-ветки и разрешает всем участникам команды свободно перемещаться между ветками других разработчиков для копирования нужных фрагментов кода.\n Бывают и обратные ситуации, когда несколько разработчиков одновременно дописывают код, заливают его в master-ветку и сталкиваются с конфликтом — один файл получает несколько несогласованных изменений. В этом случае Git попробует автоматически исправить ошибки. Если не получится, разработчики это увидят и смогут поправить код вручную.\n   ","date":1651779893,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1651779893,"objectID":"a8aea4abfbf84886b0b9b6e63d576932","permalink":"https://example.com/ru/post/choice/","publishdate":"2022-05-05T22:44:53+03:00","relpermalink":"/ru/post/choice/","section":"post","summary":"Команды разработчиков используют систему контроля версий. Чаще всего это Git. Мы понимаем, что это значит, почему это необходимо и как это работает.","tags":["Git"],"title":"Что такое Git.","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/ru/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/ru/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Эмиль Самигуллин","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://example.com/ru/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]